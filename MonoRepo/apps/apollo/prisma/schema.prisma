// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id              String   @id @default(cuid())
  username        String
  name            String?
  email           String   @unique
  profileImageURL String?
  avatar          Avatar   @relation(fields: [avatarId], references: [avatarId])
  avatarId        String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  space   Space[] 
}

model Avatar {
  id       String @id @default(cuid())
  avatarId String @unique
  users    User[]
  imageUrl String
  name     String
}

model Space {
  id        String  @id @unique @default(cuid())
  name      String
  width     Int
  height    Int?
  thumbnail String?
  spaceElements spaceElements[]
  createrId String
  creater User @relation(fields: [createrId], references: [id])
}

model spaceElements {
  id        String @id @unique @default(cuid())
  elementId String 
  element  Element @relation(fields: [elementId], references: [id])
  spaceId   String 
  space    Space @relation(fields: [spaceId], references: [id])
  x         Int
  y         Int
}

model Element {
  id       String @id @unique @default(cuid())
  width    Int
  height   Int
  imageUrl String
  spaces   spaceElements[]
  maps    mapElements[]
}

model Map {
  id     String  @id @unique @default(cuid())
  width  Int
  height Int
  name   String
  mapElements mapElements[]
}

model mapElements {
  id        String  @id @unique @default(cuid())
  mapId     String 
  map      Map @relation(fields: [mapId], references: [id])
  elementId String
  element  Element @relation(fields: [elementId], references: [id])
  x         Int?
  y         Int?
}

enum Role {
  Admin
  User
}